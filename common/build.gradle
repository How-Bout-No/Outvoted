minecraft {
    accessWidener = file("../fabric/src/main/resources/outvoted.accesswidener")

    runs {
        client {
            vmArg '-XX:HotswapAgent=fatjar'
        }
    }
}

repositories {
    maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "me.shedaniel:architectury:${rootProject.architectury_version}"

    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.16.5:3.0.30:dev'

    modCompileOnly("me.shedaniel.cloth:cloth-config:${rootProject.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

sourceSets.main.resources {
    srcDirs '../forge/src/generated/resources'
}

architectury {
    common()
}

java {
    withSourcesJar()
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            // add all the jars that should be included when publishing to maven
            artifact remapJar
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
